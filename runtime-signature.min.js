/** @license MIT (c) 2018 Laurent Payot  */
var Etc,TypedMap,TypedObject,TypedSet,anyType,error,etc,fn,isAnyType,isType,maybe,promised,typeName,typeOf,typedMap,typedObject,typedSet;error=function(e){throw new Error(function(){switch(e[0]){case"!":return`Invalid type syntax: ${e.slice(1)}`;case"@":return`Invalid signature: ${e.slice(1)}`;default:return`Type error: ${e}`}}())},TypedObject=class{constructor(e){if(this.type=e,1!==arguments.length&&error("!typedObject must have exactly one type argument."),isAnyType(this.type))return Object}},TypedSet=class{constructor(e){if(this.type=e,1!==arguments.length&&error("!typedSet must have exactly one type argument."),isAnyType(this.type))return Set}},TypedMap=function(){class e{constructor(e,t){switch(arguments.length){case 0:error("!typedMap must have at least one type argument.");break;case 1:if(isAnyType(e))return Map;this.valuesType=e;break;case 2:if(isAnyType(e)&&isAnyType(t))return Map;[this.keysType,this.valuesType]=[e,t];break;default:error("!typedMap can not have more than two type arguments.")}}}return e.prototype.keysType=[],e.prototype.valuesType=[],e}.call(this),Etc=class{constructor(e=[]){this.type=e,arguments.length>1&&error("!'etc' can not have more than one type argument.")}},isAnyType=function(e){return e===anyType||Array.isArray(e)&&0===e.length},anyType=function(){return arguments.length?error("!'anyType' can not have a type argument."):[]},maybe=function(...e){return arguments.length||error("!'maybe' must have at least one type argument."),e.some(function(e){return isAnyType(e)})?[]:[void 0,null].concat(e)},promised=function(e){return 1!==arguments.length&&error("!'promised' must have exactly one type argument."),isAnyType(e)?Promise:Promise.resolve(e)},typedObject=function(...e){return new TypedObject(...e)},typedSet=function(...e){return new TypedSet(...e)},typedMap=function(...e){return new TypedMap(...e)},etc=function(...e){return new Etc(...e)},typeOf=function(e){return void 0===e||null===e?""+e:e.constructor.name},isType=function(e,t){var r,n,y,s,o,u,a,p,i,c;if(Array.isArray(t))switch(t.length){case 0:return!0;case 1:return!!Array.isArray(e)&&(!!isAnyType(t[0])||e.every(function(e){return isType(e,t[0])}));default:return t.some(function(t){return isType(e,t)})}else switch(null!=t?t.constructor:void 0){case void 0:case String:case Number:case Boolean:return e===t;case Function:switch(t){case anyType:return!0;case promised:case maybe:case typedObject:case typedSet:case typedMap:return error(`!'${t.name}' can not be used directly as a function.`);case etc:return error("!'etc' can not be used in types.!!!");default:return(null!=e?e.constructor:void 0)===t}break;case Object:if((null!=e?e.constructor:void 0)!==Object)return!1;if(!Object.keys(t).length)return!Object.keys(e).length;for(r in t)if(p=t[r],!isType(e[r],p))return!1;return!0;case TypedObject:return(null!=e?e.constructor:void 0)===Object&&(a=t.type,!!isAnyType(a)||Object.values(e).every(function(e){return isType(e,a)}));case TypedSet:return(null!=e?e.constructor:void 0)===Set&&(a=t.type,!!isAnyType(a)||("undefined"!==(o=typeOf(a))&&"null"!==o&&"String"!==o&&"Number"!==o&&"Boolean"!==o||error(`!Typed Set type can not be a literal of type '${a}'.`),[...e].every(function(e){return isType(e,a)})));case TypedMap:if((null!=e?e.constructor:void 0)!==Map)return!1;switch(({keysType:y,valuesType:c}=t),!1){case!(isAnyType(y)&&isAnyType(c)):return!0;case!isAnyType(y):return Array.from(e.values()).every(function(e){return isType(e,c)});case!isAnyType(c):return Array.from(e.keys()).every(function(e){return isType(e,y)});default:return n=Array.from(e.keys()),i=Array.from(e.values()),n.every(function(e){return isType(e,y)})&&i.every(function(e){return isType(e,c)})}break;case Etc:return error("!'etc' can not be used in types.");default:return s=(u=t.constructor)===Set||u===Map?"the provided Typed":"",error(`!Type can not be an instance of ${typeOf(t)}. Use ${s}${typeOf(t)} as type instead.`)}},typeName=function(e){var t;if(isAnyType(e))return"any type";switch(typeOf(e)){case"undefined":case"null":return typeOf(e);case"Array":return 1===e.length?`array of '${typeName(e[0])}'`:function(){var r,n,y;for(y=[],r=0,n=e.length;r<n;r++)t=e[r],y.push(typeName(t));return y}().join(" or ");case"Function":return e.name;case"Object":return"custom type object";default:return`literal ${typeOf(e)} '${e}'`}},fn=function(e,t,r){return Array.isArray(e)||error("@Array of arguments types is missing."),(null!=t?t.constructor:void 0)!==Function||t.name||error("@Result type is missing."),(null!=r?r.constructor:void 0)!==Function&&error("@Function to wrap is missing."),function(...n){var y,s,o,u,a,p,i,c,l,f,d,m;for(l=!1,s=u=0,a=e.length;u<a;s=++u)if((m=e[s])===etc||(null!=m?m.constructor:void 0)===Etc){if(s+1<e.length&&error("@Rest type must be the last of the arguments types."),l=!0,d=m===etc?[]:m.type,!isAnyType(d))for(o=i=0,p=(c=n.slice(s)).length;i<p;o=++i)y=c[o],isType(y,d)||error(`Argument number ${s+o+1} (${y}) should be of type ${typeName(d)} instead of ${typeOf(y)}.`)}else isAnyType(m)||(void 0===n[s]?isType(void 0,m)||error(`Missing required argument number ${s+1}.`):isType(n[s],m)||error(`Argument number ${s+1} (${n[s]}) should be of type ${typeName(m)} instead of ${typeOf(n[s])}.`));return n.length>e.length&&!l&&error("Too many arguments provided."),(null!=t?t.constructor:void 0)===Promise?t.then(function(e){var t;return(null!=(t=r(...n))?t.constructor:void 0)!==Promise&&error("Function should return a promise."),t.then(function(t){return isType(t,e)||error(`Promise result (${t}) should be of type ${typeName(e)} instead of ${typeOf(t)}.`),t})}):(f=r(...n),isType(f,t)||error(`Result (${f}) should be of type ${typeName(t)} instead of ${typeOf(f)}.`),f)}},module.exports={typeOf:typeOf,isType:isType,fn:fn,maybe:maybe,anyType:anyType,promised:promised,etc:etc,typedObject:typedObject,typedSet:typedSet,typedMap:typedMap};